{"version":3,"file":"observableToPromise.js","sourceRoot":"","sources":["../../../src/utilities/testing/observableToPromise.ts"],"names":[],"mappings":";AA0BA,MAAM,UAAU,kCAAkC,CAChD,EAA6E;QAA3E,UAAU,gBAAA,EAAE,qBAAoB,EAApB,aAAa,mBAAG,IAAI,KAAA,EAAE,YAAS,EAAT,IAAI,mBAAG,CAAC,CAAC,KAAA,EAAE,sBAAmB,EAAnB,cAAc,mBAAG,EAAE,KAAA;IAClE,aAAwB;SAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;QAAxB,4BAAwB;;IAExB,IAAI,YAAY,GAA2B,IAAa,CAAC;IACzD,IAAM,OAAO,GAAG,IAAI,OAAO,CAAQ,UAAC,OAAO,EAAE,MAAM;QACjD,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,OAAO,GAAU,EAAE,CAAC;QAE1B,IAAM,YAAY,GAAG;YACnB,IAAI,CAAC,aAAa,EAAE;gBAClB,OAAO;aACR;YAED,IAAM,IAAI,GAAG;gBACX,YAAY,CAAC,WAAW,EAAE,CAAC;gBAE3B,OAAO,CAAC,OAAO,CAAC,CAAC;YACnB,CAAC,CAAC;YAEF,IAAI,OAAO,KAAK,GAAG,CAAC,MAAM,IAAI,UAAU,KAAK,cAAc,CAAC,MAAM,EAAE;gBAClE,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;oBACf,IAAI,EAAE,CAAC;iBACR;qBAAM;oBACL,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACxB;aACF;QACH,CAAC,CAAC;QAEF,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAE9B,YAAY,GAAG,UAAU,CAAC,SAAS,CAAC;YAClC,IAAI,EAAJ,UAAK,MAA8B;gBACjC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;oBACjB,IAAM,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC1B,IAAI,EAAE;wBAAE,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;oBAC1B,MAAM,CAAC,IAAI,KAAK,CAAC,+CAA6C,GAAG,CAAC,MAAM,WAAQ,CAAC,CAAC,CAAC;gBACrF,CAAC,CAAC,CAAC,IAAI,CACL,UAAA,GAAG;oBACD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,YAAY,EAAE,CAAC;gBACjB,CAAC,EACD,MAAM,CACP,CAAC;YACJ,CAAC;YACD,KAAK,EAAL,UAAM,KAAY;gBAChB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;oBACjB,IAAM,OAAO,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC;oBAC7C,IAAI,OAAO;wBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;oBACnC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC,IAAI,CACL,YAAY,EACZ,MAAM,CACP,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,OAAO,SAAA;QACP,YAAY,cAAA;KACb,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,WACZ,OAAgB;IAChB,aAAwB;SAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;QAAxB,4BAAwB;;IAExB,OAAO,kCAAkC,+BAAC,OAAO,GAAK,GAAG,GAAE,OAAO,CAAC;AACrE,CAAC","sourcesContent":"import { __spreadArrays } from \"tslib\";\nexport function observableToPromiseAndSubscription(_a) {\n    var observable = _a.observable, _b = _a.shouldResolve, shouldResolve = _b === void 0 ? true : _b, _c = _a.wait, wait = _c === void 0 ? -1 : _c, _d = _a.errorCallbacks, errorCallbacks = _d === void 0 ? [] : _d;\n    var cbs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        cbs[_i - 1] = arguments[_i];\n    }\n    var subscription = null;\n    var promise = new Promise(function (resolve, reject) {\n        var errorIndex = 0;\n        var cbIndex = 0;\n        var results = [];\n        var tryToResolve = function () {\n            if (!shouldResolve) {\n                return;\n            }\n            var done = function () {\n                subscription.unsubscribe();\n                resolve(results);\n            };\n            if (cbIndex === cbs.length && errorIndex === errorCallbacks.length) {\n                if (wait === -1) {\n                    done();\n                }\n                else {\n                    setTimeout(done, wait);\n                }\n            }\n        };\n        var queue = Promise.resolve();\n        subscription = observable.subscribe({\n            next: function (result) {\n                queue = queue.then(function () {\n                    var cb = cbs[cbIndex++];\n                    if (cb)\n                        return cb(result);\n                    reject(new Error(\"Observable 'next' method called more than \" + cbs.length + \" times\"));\n                }).then(function (res) {\n                    results.push(res);\n                    tryToResolve();\n                }, reject);\n            },\n            error: function (error) {\n                queue = queue.then(function () {\n                    var errorCb = errorCallbacks[errorIndex++];\n                    if (errorCb)\n                        return errorCb(error);\n                    reject(error);\n                }).then(tryToResolve, reject);\n            },\n        });\n    });\n    return {\n        promise: promise,\n        subscription: subscription,\n    };\n}\nexport default function (options) {\n    var cbs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        cbs[_i - 1] = arguments[_i];\n    }\n    return observableToPromiseAndSubscription.apply(void 0, __spreadArrays([options], cbs)).promise;\n}\n//# sourceMappingURL=observableToPromise.js.map"}