{"version":3,"file":"MockedProvider.js","sourceRoot":"","sources":["../../../../src/utilities/testing/mocking/MockedProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,YAAY,EAAkB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,aAAa,IAAI,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAkB,MAAM,YAAY,CAAC;AAoBtD;IAAoC,kCAGnC;IAKC,wBAAY,KAA0B;QAAtC,YACE,kBAAM,KAAK,CAAC,SAqBb;QAnBO,IAAA,KAOF,KAAI,CAAC,KAAK,EANZ,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,SAAS,eAAA,EACT,IAAI,UACQ,CAAC;QACf,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC;YAC9B,KAAK,EAAE,KAAK,IAAI,IAAI,KAAK,CAAC,EAAE,WAAW,aAAA,EAAE,CAAC;YAC1C,cAAc,gBAAA;YACd,IAAI,EAAE,IAAI,IAAI,IAAI,QAAQ,CACxB,KAAK,IAAI,EAAE,EACX,WAAW,CACZ;YACD,SAAS,WAAA;SACV,CAAC,CAAC;QAEH,KAAI,CAAC,KAAK,GAAG,EAAE,MAAM,QAAA,EAAE,CAAC;;IAC1B,CAAC;IAEM,+BAAM,GAAb;QACQ,IAAA,KAA2B,IAAI,CAAC,KAAK,EAAnC,QAAQ,cAAA,EAAE,UAAU,gBAAe,CAAC;QAC5C,OAAO,QAAQ,CAAC,CAAC,CAAC,CAChB,oBAAC,cAAc,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IACtC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAO,UAAU,EAAG,CACtD,CAClB,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAEM,6CAAoB,GAA3B;QAGE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAzCa,2BAAY,GAAwB;QAChD,WAAW,EAAE,IAAI;KAClB,CAAC;IAwCJ,qBAAC;CAAA,AA9CD,CAAoC,KAAK,CAAC,SAAS,GA8ClD;SA9CY,cAAc","sourcesContent":"import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport { ApolloClient } from \"../../../core/index.js\";\nimport { InMemoryCache as Cache } from \"../../../cache/index.js\";\nimport { ApolloProvider } from \"../../../react/context/index.js\";\nimport { MockLink } from \"./mockLink.js\";\nvar MockedProvider = (function (_super) {\n    __extends(MockedProvider, _super);\n    function MockedProvider(props) {\n        var _this = _super.call(this, props) || this;\n        var _a = _this.props, mocks = _a.mocks, addTypename = _a.addTypename, defaultOptions = _a.defaultOptions, cache = _a.cache, resolvers = _a.resolvers, link = _a.link;\n        var client = new ApolloClient({\n            cache: cache || new Cache({ addTypename: addTypename }),\n            defaultOptions: defaultOptions,\n            link: link || new MockLink(mocks || [], addTypename),\n            resolvers: resolvers,\n        });\n        _this.state = { client: client };\n        return _this;\n    }\n    MockedProvider.prototype.render = function () {\n        var _a = this.props, children = _a.children, childProps = _a.childProps;\n        return children ? (React.createElement(ApolloProvider, { client: this.state.client }, React.cloneElement(React.Children.only(children), __assign({}, childProps)))) : null;\n    };\n    MockedProvider.prototype.componentWillUnmount = function () {\n        this.state.client.stop();\n    };\n    MockedProvider.defaultProps = {\n        addTypename: true\n    };\n    return MockedProvider;\n}(React.Component));\nexport { MockedProvider };\n//# sourceMappingURL=MockedProvider.js.map"}