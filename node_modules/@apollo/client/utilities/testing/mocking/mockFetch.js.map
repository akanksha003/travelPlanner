{"version":3,"file":"mockFetch.js","sourceRoot":"","sources":["../../../../src/utilities/testing/mocking/mockFetch.ts"],"names":[],"mappings":";AAAA,OAAO,cAAc,CAAC;AAmBtB,MAAM,UAAU,qBAAqB,CACnC,MAAc,EACd,OAAa;IAEb,IAAM,MAAM,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;IAClD,IAAM,UAAU,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;IAEhE,OAAO;QACL,EAAE,EAAE,MAAM,KAAK,GAAG;QAClB,MAAM,QAAA;QACN,UAAU,YAAA;QACV,IAAI,EAAJ;YACE,OAAO,OAAO,CAAC,OAAO,CAAS,MAAM,CAAC,CAAC;QACzC,CAAC;KACF,CAAC;AACJ,CAAC;AAED;IAGE;QAAA,iBAMC;QANW,yBAAyC;aAAzC,UAAyC,EAAzC,qBAAyC,EAAzC,IAAyC;YAAzC,oCAAyC;;QACnD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAE/B,eAAe,CAAC,OAAO,CAAC,UAAA,cAAc;YACpC,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qCAAiB,GAAxB,UAAyB,cAAmC;QAC1D,IAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAErD,IAAI,CAAC,eAAe,EAAE;YACpB,eAAe,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;SAClD;QAED,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAEM,yBAAK,GAAZ,UAAa,GAAW,EAAE,IAAiB;QACzC,IAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CACb,mDAAiD,GAAG,aAAQ,IAAM,CACnE,CAAC;SACH;QAEK,IAAA,KAAoB,SAAS,CAAC,KAAK,EAAG,EAApC,MAAM,YAAA,EAAE,KAAK,WAAuB,CAAC;QAE7C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,UAAU,CAAC;gBACT,OAAO,CAAC,MAAM,CAAC,CAAC;YAClB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,oCAAgB,GAAvB,UAAwB,GAAW,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,GAAG,KAAA;YACH,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC;SACtB,CAAC,CAAC;IACL,CAAC;IAKM,4BAAQ,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACH,gBAAC;AAAD,CAAC,AA1DD,IA0DC;;AAED,SAAS,SAAS,CAAC,GAAQ;IACzB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SACpB,IAAI,EAAE;SACN,MAAM,CACL,UAAC,GAAQ,EAAE,GAAW;;QACpB,OAAA,MAAM,CAAC,MAAM;YAET,GAAC,GAAG,IACF,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ;gBAChE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iBAEhB,GAAG,CACJ;IARD,CAQC,EACH,EAAE,CACH,CAAC;AACN,CAAC;AAED,MAAM,UAAU,eAAe;IAAC,yBAAyC;SAAzC,UAAyC,EAAzC,qBAAyC,EAAzC,IAAyC;QAAzC,oCAAyC;;IACvE,OAAO,KAAI,SAAS,YAAT,SAAS,2BAAI,eAAe,MAAE,QAAQ,EAAE,CAAC;AACtD,CAAC","sourcesContent":"import { __spreadArrays } from \"tslib\";\nimport 'whatwg-fetch';\nexport function createMockedIResponse(result, options) {\n    var status = (options && options.status) || 200;\n    var statusText = (options && options.statusText) || undefined;\n    return {\n        ok: status === 200,\n        status: status,\n        statusText: statusText,\n        json: function () {\n            return Promise.resolve(result);\n        },\n    };\n}\nvar MockFetch = (function () {\n    function MockFetch() {\n        var _this = this;\n        var mockedResponses = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mockedResponses[_i] = arguments[_i];\n        }\n        this.mockedResponsesByKey = {};\n        mockedResponses.forEach(function (mockedResponse) {\n            _this.addMockedResponse(mockedResponse);\n        });\n    }\n    MockFetch.prototype.addMockedResponse = function (mockedResponse) {\n        var key = this.fetchParamsToKey(mockedResponse.url, mockedResponse.opts);\n        var mockedResponses = this.mockedResponsesByKey[key];\n        if (!mockedResponses) {\n            mockedResponses = [];\n            this.mockedResponsesByKey[key] = mockedResponses;\n        }\n        mockedResponses.push(mockedResponse);\n    };\n    MockFetch.prototype.fetch = function (url, opts) {\n        var key = this.fetchParamsToKey(url, opts);\n        var responses = this.mockedResponsesByKey[key];\n        if (!responses || responses.length === 0) {\n            throw new Error(\"No more mocked fetch responses for the params \" + url + \" and \" + opts);\n        }\n        var _a = responses.shift(), result = _a.result, delay = _a.delay;\n        if (!result) {\n            throw new Error(\"Mocked fetch response should contain a result.\");\n        }\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                resolve(result);\n            }, delay ? delay : 0);\n        });\n    };\n    MockFetch.prototype.fetchParamsToKey = function (url, opts) {\n        return JSON.stringify({\n            url: url,\n            opts: sortByKey(opts),\n        });\n    };\n    MockFetch.prototype.getFetch = function () {\n        return this.fetch.bind(this);\n    };\n    return MockFetch;\n}());\nexport { MockFetch };\nfunction sortByKey(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (ret, key) {\n        var _a;\n        return Object.assign((_a = {},\n            _a[key] = Object.prototype.toString.call(obj[key]).slice(8, -1) === 'Object'\n                ? sortByKey(obj[key])\n                : obj[key],\n            _a), ret);\n    }, {});\n}\nexport function createMockFetch() {\n    var mockedResponses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mockedResponses[_i] = arguments[_i];\n    }\n    return new (MockFetch.bind.apply(MockFetch, __spreadArrays([void 0], mockedResponses)))().getFetch();\n}\n//# sourceMappingURL=mockFetch.js.map"}