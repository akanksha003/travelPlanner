{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/link/schema/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAGpD,OAAO,EAAE,UAAU,EAA0B,MAAM,SAAS,CAAC;AAC7D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AA0B7C;IAAgC,8BAAU;IAKxC,oBAAY,OAA2B;QAAvC,YACE,iBAAO,SAIR;QAHC,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC7B,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACnC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;;IACjC,CAAC;IAEM,4BAAO,GAAd,UAAe,SAAoB;QAAnC,iBA0BC;QAzBC,OAAO,IAAI,UAAU,CAAc,UAAA,QAAQ;YACzC,IAAI,OAAO,CACT,UAAA,OAAO,IAAI,OAAA,OAAO,CAChB,OAAO,KAAI,CAAC,OAAO,KAAK,UAAU;gBAChC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACzB,CAAC,CAAC,KAAI,CAAC,OAAO,CACjB,EAJU,CAIV,CACF,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CACvB,KAAI,CAAC,MAAM,EACX,SAAS,CAAC,KAAK,EACf,KAAI,CAAC,SAAS,EACd,OAAO,EACP,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,aAAa,CACxB,EAPiB,CAOjB,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI;gBACV,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACpB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;gBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACpB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iBAAC;AAAD,CAAC,AAvCD,CAAgC,UAAU,GAuCzC","sourcesContent":"import { __extends } from \"tslib\";\nimport { execute } from 'graphql/execution/execute';\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nvar SchemaLink = (function (_super) {\n    __extends(SchemaLink, _super);\n    function SchemaLink(options) {\n        var _this = _super.call(this) || this;\n        _this.schema = options.schema;\n        _this.rootValue = options.rootValue;\n        _this.context = options.context;\n        return _this;\n    }\n    SchemaLink.prototype.request = function (operation) {\n        var _this = this;\n        return new Observable(function (observer) {\n            new Promise(function (resolve) { return resolve(typeof _this.context === 'function'\n                ? _this.context(operation)\n                : _this.context); }).then(function (context) { return execute(_this.schema, operation.query, _this.rootValue, context, operation.variables, operation.operationName); }).then(function (data) {\n                if (!observer.closed) {\n                    observer.next(data);\n                    observer.complete();\n                }\n            }).catch(function (error) {\n                if (!observer.closed) {\n                    observer.error(error);\n                }\n            });\n        });\n    };\n    return SchemaLink;\n}(ApolloLink));\nexport { SchemaLink };\n//# sourceMappingURL=index.js.map"}