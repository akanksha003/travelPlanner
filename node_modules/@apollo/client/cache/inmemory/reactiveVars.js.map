{"version":3,"file":"reactiveVars.js","sourceRoot":"","sources":["../../../src/cache/inmemory/reactiveVars.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AACpC,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAW/B,IAAM,MAAM,GAAG,GAAG,EAAoB,CAAC;AAIvC,MAAM,CAAC,IAAM,SAAS,GAAG,IAAI,IAAI,EAAoB,CAAC;AAMtD,SAAS,iBAAiB,CAAI,GAAW,EAAE,QAA0B;IACnE,IAAM,KAAK,GAAQ,EAAE,CAAC;IACtB,GAAG,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACtC,GAAG,CAAC,KAAK,EAAE,CAAC;IACZ,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,CAAC;AAED,MAAM,UAAU,OAAO,CAAI,KAAQ;IACjC,IAAM,MAAM,GAAG,IAAI,GAAG,EAAoB,CAAC;IAC3C,IAAM,SAAS,GAAG,IAAI,GAAG,EAAuB,CAAC;IAEjD,IAAM,EAAE,GAAmB,UAAU,QAAQ;QAC3C,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,KAAK,KAAK,QAAQ,EAAE;gBACtB,KAAK,GAAG,QAAS,CAAC;gBAIlB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAGjB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAE1B,iBAAiB,CAAC,SAAS,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;aAC3D;SACF;aAAM;YAIL,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YACnC,IAAI,KAAK;gBAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,EAAE,CAAC,CAAC;SACZ;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAEF,EAAE,CAAC,YAAY,GAAG,UAAA,QAAQ;QACxB,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO;YACL,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,EAAE,CAAC;AACZ,CAAC;AAQD,SAAS,SAAS,CAAC,KAAoB;IACrC,IAAI,KAAK,CAAC,gBAAgB,EAAE;QAC1B,KAAK,CAAC,gBAAgB,EAAE,CAAC;KAC1B;AACH,CAAC","sourcesContent":"import { Slot } from \"@wry/context\";\nimport { dep } from \"optimism\";\nvar varDep = dep();\nexport var cacheSlot = new Slot();\nfunction consumeAndIterate(set, callback) {\n    var items = [];\n    set.forEach(function (item) { return items.push(item); });\n    set.clear();\n    items.forEach(callback);\n}\nexport function makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function (newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                varDep.dirty(rv);\n                caches.forEach(broadcast);\n                consumeAndIterate(listeners, function (listener) { return listener(value); });\n            }\n        }\n        else {\n            var cache = cacheSlot.getValue();\n            if (cache)\n                caches.add(cache);\n            varDep(rv);\n        }\n        return value;\n    };\n    rv.onNextChange = function (listener) {\n        listeners.add(listener);\n        return function () {\n            listeners.delete(listener);\n        };\n    };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n}\n//# sourceMappingURL=reactiveVars.js.map"}